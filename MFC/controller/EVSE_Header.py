# written based on EVSE C Code

from interface.SECC_Header import *

EVSE_FALSE = 0
EVSE_TRUE = 1

EVSE_IMD_NOK = 0
EVSE_IMD_OK = 1

EVSE_DEACTIVATED = 0
EVSE_ACTIVATED = 1

EVSE_STOP = 0
EVSE_START = 1

EVSE_NSTOP_OFF = 0
EVSE_NSTOP_ON = 1

EVSE_ESTOP_OFF = 0
EVSE_ESTOP_ON = 1

EVSE_REQ_DCDC_SEND_INVERVAL_COUNT = 5
EVSE_REQ_DCDC_NEXT_MODULE_COUNT_MAX = APP_CEG_MODULE_COUNT

EVSE_MULT_FLOAT_TO_UINT32 = 1000          # mV, mT, mA
EVSE_MULT_UINT8_TO_UINT16 = 10
EVSE_MULT_W_TO_KW = 0.001
EVSE_MULT_KW_TO_KWH = (1.0/3600)    # hour -> 60 min -> 3600 sec

EVSE_WAITING_SLAC_TIMEOUT_MS = (50000 * 3)
EVSE_AUTHORIZATION_EIM_TIMEOUT_MS = 60000
EVSE_CABLECHECK_TIMEOUT_MS = 40000
EVSE_CABLECHECK_VALID_WAIT_MS = 1000
EVSE_PRE_CHARGE_TIMEOUT_MS = 10000
EVSE_WAIT_INITIALIZE_TIMEOUT_MS = 500

EVSE_TOTAL_POWER_W_MAX = SECC_MAX_POWER_LIMIT
EVSE_TOTAL_CURRENT_A_MAX = SECC_MAX_CURRENT_LIMIT
EVSE_DC_OUTPUT_V_MIN = SECC_MIN_VOLTAGE_LIMIT
EVSE_DC_OUTPUT_V_MAX = SECC_MAX_VOLTAGE_LIMIT
EVSE_DC_INPUT_V_MIN = 300.0
EVSE_PRE_CHARGE_CURRENT = 0.0
EVSE_TOTAL_CURRENT_A_STOP = 1.0
EVSE_TOTAL_CURRENT_A_IS_STOPPED = 2.0
EVSE_SOC_MAX = 100

EVSE_REQ_DCDC_GROUP_INFO_SYS_VOLT_CURR = 0
EVSE_REQ_DCDC_GROUP_INFO_MDL_NUMBERS = (EVSE_REQ_DCDC_GROUP_INFO_SYS_VOLT_CURR + 1)
EVSE_REQ_DCDC_MODULE_INFO_VOLT_CURR = (EVSE_REQ_DCDC_GROUP_INFO_MDL_NUMBERS + 1)
EVSE_REQ_DCDC_MODULE_INFO_TEMP_STATE = (EVSE_REQ_DCDC_MODULE_INFO_VOLT_CURR + 1)
EVSE_REQ_DCDC_MODULE_INFO_VIN = (EVSE_REQ_DCDC_MODULE_INFO_TEMP_STATE + 1)
EVSE_REQ_DCDC_MODULE_DIODE_VOLT_IVAIL_CURR = (EVSE_REQ_DCDC_MODULE_INFO_VIN + 1)
EVSE_REQ_DCDC_GROUP_INFO_MAX = (EVSE_REQ_DCDC_MODULE_DIODE_VOLT_IVAIL_CURR + 1)

EVSE_HV_NONE = 0
EVSE_HV_BATTERY_RELAY_CLOSE = (EVSE_HV_NONE + 1)
EVSE_HV_BATTERY_RELAY_CLOSE_FB = (EVSE_HV_BATTERY_RELAY_CLOSE + 1)
EVSE_HV_OUT_RELAY_CLOSE = (EVSE_HV_BATTERY_RELAY_CLOSE_FB + 1)
EVSE_HV_OUT_RELAY_CLOSE_FB = (EVSE_HV_OUT_RELAY_CLOSE + 1)
EVSE_HV_CLOSE_FINISHED = (EVSE_HV_OUT_RELAY_CLOSE_FB + 1)

EVSE_DCDC_NONE = 0
EVSE_DCDC_SET_DEFAULT = (EVSE_DCDC_NONE + 1)
EVSE_DCDC_CONTROL_ON = (EVSE_DCDC_SET_DEFAULT + 1)
EVSE_DCDC_CONTROL_ON_FB = (EVSE_DCDC_CONTROL_ON + 1)
EVSE_DCDC_CONTROL_ON_FINISHED = (EVSE_DCDC_CONTROL_ON_FB + 1)
EVSE_DCDC_CONTROL_ALARM = (EVSE_DCDC_CONTROL_ON_FINISHED + 1)

EVSE_ERR_NO_ERROR = 0
EVSE_ERR_DCDC1_OUTPUT_SHORT = 1
EVSE_ERR_DCDC1_INNER_COMM_INTR = (EVSE_ERR_DCDC1_OUTPUT_SHORT + 1)
EVSE_ERR_DCDC1_PFC_SIDE_ABNORMAL = (EVSE_ERR_DCDC1_INNER_COMM_INTR + 1)
EVSE_ERR_DCDC1_DCHG_ABNORMAL = (EVSE_ERR_DCDC1_PFC_SIDE_ABNORMAL + 1)
EVSE_ERR_DCDC1_MDL_FAULT = (EVSE_ERR_DCDC1_DCHG_ABNORMAL + 1)
EVSE_ERR_DCDC1_MDL_PROTECT = (EVSE_ERR_DCDC1_MDL_FAULT + 1)
EVSE_ERR_DCDC1_FAN_FAULT = (EVSE_ERR_DCDC1_MDL_PROTECT + 1)
EVSE_ERR_DCDC1_OT = (EVSE_ERR_DCDC1_FAN_FAULT + 1)
EVSE_ERR_DCDC1_OUTPUT_OV = (EVSE_ERR_DCDC1_OT + 1)
EVSE_ERR_DCDC1_CAN_COMM_INTR = (EVSE_ERR_DCDC1_OUTPUT_OV + 1)
EVSE_ERR_DCDC1_POWER_LIMIT = (EVSE_ERR_DCDC1_CAN_COMM_INTR + 1)
EVSE_ERR_DCDC1_MDL_REPETITION = (EVSE_ERR_DCDC1_POWER_LIMIT + 1)
EVSE_ERR_DCDC1_LOAD_SHARING = (EVSE_ERR_DCDC1_MDL_REPETITION + 1)
EVSE_ERR_DCDC1_INPUT_PHASE_LOST = (EVSE_ERR_DCDC1_LOAD_SHARING + 1)
EVSE_ERR_DCDC1_UNBALANCE = (EVSE_ERR_DCDC1_INPUT_PHASE_LOST + 1)
EVSE_ERR_DCDC1_INPUT_UV = (EVSE_ERR_DCDC1_UNBALANCE + 1)
EVSE_ERR_DCDC1_INPUT_OV = (EVSE_ERR_DCDC1_INPUT_UV + 1)
EVSE_ERR_DCDC2_OUTPUT_SHORT = 31
EVSE_ERR_DCDC2_INNER_COMM_INTR = (EVSE_ERR_DCDC2_OUTPUT_SHORT + 1)
EVSE_ERR_DCDC2_PFC_SIDE_ABNORMAL = (EVSE_ERR_DCDC2_INNER_COMM_INTR + 1)
EVSE_ERR_DCDC2_DCHG_ABNORMAL = (EVSE_ERR_DCDC2_PFC_SIDE_ABNORMAL + 1)
EVSE_ERR_DCDC2_MDL_FAULT = (EVSE_ERR_DCDC2_DCHG_ABNORMAL + 1)
EVSE_ERR_DCDC2_MDL_PROTECT = (EVSE_ERR_DCDC2_MDL_FAULT + 1)
EVSE_ERR_DCDC2_FAN_FAULT = (EVSE_ERR_DCDC2_MDL_PROTECT + 1)
EVSE_ERR_DCDC2_OT = (EVSE_ERR_DCDC2_FAN_FAULT + 1)
EVSE_ERR_DCDC2_OUTPUT_OV = (EVSE_ERR_DCDC2_OT + 1)
EVSE_ERR_DCDC2_CAN_COMM_INTR = (EVSE_ERR_DCDC2_OUTPUT_OV + 1)
EVSE_ERR_DCDC2_POWER_LIMIT = (EVSE_ERR_DCDC2_CAN_COMM_INTR + 1)
EVSE_ERR_DCDC2_MDL_REPETITION = (EVSE_ERR_DCDC2_POWER_LIMIT + 1)
EVSE_ERR_DCDC2_LOAD_SHARING = (EVSE_ERR_DCDC2_MDL_REPETITION + 1)
EVSE_ERR_DCDC2_INPUT_PHASE_LOST = (EVSE_ERR_DCDC2_LOAD_SHARING + 1)
EVSE_ERR_DCDC2_UNBALANCE = (EVSE_ERR_DCDC2_INPUT_PHASE_LOST + 1)
EVSE_ERR_DCDC2_INPUT_UV = (EVSE_ERR_DCDC2_UNBALANCE + 1)
EVSE_ERR_DCDC2_INPUT_OV = (EVSE_ERR_DCDC2_INPUT_UV + 1)


# typedef struct EVSE_PARAMETERS
class EVSE_Param:
    def __init__(self):
        self.is_activated = 0
        self.request_count = 0
        self.next_module_count = 0
        self.evse_state = 0
        self.hv_relay_state = 0
        self.dcdc_state = 0
        self.timestamp = 0
        self.f_target_voltage = float(0)
        self.f_target_current = float(0)
        self.f_present_voltage = float(0)
        self.f_present_current = float(0)
        self.f_present_kw = float(0)
        self.f_present_kwh = float(0)
        self.f_target_current_max = float(0)
        self.charging_control = 0
        self.normalstop_user = 0
        self.emergencystop_user = 0
